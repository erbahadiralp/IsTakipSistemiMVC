@{
    ViewBag.Title = "Index";
    Layout = ViewBag.Layout;
}

@model IEnumerable<IsTakipSistemiMVC.Models.MailViewModel>

<style>
    body {
        font-family: Arial, sans-serif;
    }

    .sidebar {
        width: 250px;
        background-color: #f5f5f5;
        padding: 20px;
        position: fixed;
        height: 100%;
        overflow-y: auto;
        border-right: 1px solid #ddd;
        text-align: center;
    }

    .content {
        margin-left: 270px;
        padding: 20px;
        background-color: #f7f7f7;
        min-height: 100vh;
    }

    .custom-button {
        width: 100%;
        background-color: #1a73e8;
        color: white;
        border-radius: 25px;
        text-align: center;
        padding-left: 15px;
        font-size: 16px;
        margin-bottom: 15px;
        transition: background-color 0.3s ease;
    }

        .custom-button i {
            margin-right: 10px;
        }

        .custom-button:hover {
            background-color: #135ab2;
            color: white;
        }

    .nav-link {
        color: #202124;
        font-weight: 500;
        padding: 10px;
        border-radius: 25px;
        margin-bottom: 5px;
        transition: background-color 0.3s ease;
    }

        .nav-link.active, .nav-link:hover {
            background-color: #e8f0fe;
            color: #1a73e8;
        }

    .search-bar {
        display: flex;
        align-items: center;
        background-color: white;
        border: 1px solid #ccc;
        border-radius: 25px;
        padding: 5px 15px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .search-input {
        width: 100%;
        border: none;
        outline: none;
        font-size: 14px;
        color: #202124;
    }

        .search-input::placeholder {
            color: #999;
        }

    .card-body {
        background-color: white;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .table {
        width: 100%;
        margin-bottom: 0;
    }

        .table th, .table td {
            vertical-align: middle;
            padding: 10px;
            border-bottom: 1px solid #f1f3f4;
        }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f8f9fa;
    }

    .table-responsive {
        margin-top: 15px;
    }

    .button-container {
        display: none;
        justify-content: flex-start;
        gap: 10px;
        margin-bottom: 15px;
    }

        .button-container.visible {
            display: flex;
        }
</style>

<div class="sidebar">
    <a href="@Url.Action("MailOlustur", "Mail")" class="btn btn-primary custom-button">Oluştur</a>
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link active " href="@Url.Action("Index", "Mail")">
                <i class="bi bi-inbox"></i> Gelen Kutusu
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GidenMailler", "Mail")">
                <i class="bi bi-send"></i> Gönderilmiş Postalar
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("ArsivGoster", "Mail")">
                <i class="bi bi-archive"></i> Arşivlenmiş Postalar
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("SilinmisMailler", "Mail")">
                <i class="bi bi-trash"></i> Silinmiş Postalar
            </a>
        </li>
    </ul>
</div>

<div class="content">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="search-bar">
            <i class="fas fa-search"></i>
            <input type="text" id="searchInput" class="search-input" placeholder="Arama yap...">
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="button-container" id="actionButtons">
                <button id="deleteSelected" class="btn btn-danger">
                    <i class="bi bi-trash"></i>
                </button>
                <button id="markReadSelected" class="btn btn-success">
                    <i class="bi bi-envelope-open"></i>
                </button>
                <button id="archiveSelected" class="btn btn-warning">
                    <i class="bi bi-archive"></i>
                </button>
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr class="text-center table-light">
                            <th><input type="checkbox" id="selectAll"></th>
                            <th>Gönderen</th>
                            <th>Konu</th>
                            <th>Tarih</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var mail in Model)
                        {
                            string rowClass = mail.mailOkunma ? "" : "font-weight-bold";
                            <tr class="text-center @rowClass" data-mail-id="@mail.MailId">
                                <td><input type="checkbox" class="select-mail" data-mail-id="@mail.MailId"></td>
                                <td>@mail.GondericiAdSoyad</td>
                                <td>@mail.Konu</td>
                                <td>@mail.GonderilmeTarihi.ToShortDateString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
    // Arama çubuğu
    $('#searchInput').on('keyup', function () {
        var input = $(this).val().toLowerCase();
        $('table tbody tr').filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(input) > -1);
        });
    });

    // Tüm mailleri seçme
    $('#selectAll').on('change', function () {
        $('.select-mail').prop('checked', this.checked);
        toggleActionButtons();
    });

    // Bireysel mail seçme
    $('.select-mail').on('change', function () {
        if (!this.checked) {
            $('#selectAll').prop('checked', false);
        }
        toggleActionButtons();
    });

    // Butonların görünürlüğünü yönetme
    function toggleActionButtons() {
        var selected = $('.select-mail:checked').length > 0;
        var actionButtons = $('#actionButtons');
        if (selected) {
            actionButtons.addClass('visible');
        } else {
            actionButtons.removeClass('visible');
        }
    }

    // Seçili mailleri silme
    $('#deleteSelected').on('click', function () {
        var ids = $('.select-mail:checked').map(function () {
            return $(this).data('mail-id');
        }).get();
        if (ids.length > 0) {
            $.ajax({
                url: '@Url.Action("MailSil", "Mail")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(ids),
                success: function (data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error deleting mails: ', textStatus, errorThrown);
                }
            });
        }
    });

    // Seçili mailleri arşivleme
    $('#archiveSelected').on('click', function () {
        var ids = $('.select-mail:checked').map(function () {
            return $(this).data('mail-id');
        }).get();
        if (ids.length > 0) {
            $.ajax({
                url: '@Url.Action("MailArsivle", "Mail")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(ids),
                success: function (data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error archiving mails: ', textStatus, errorThrown);
                }
            });
        }
    });

    // Seçili mailleri okundu olarak işaretleme
    $('#markReadSelected').on('click', function () {
        var ids = $('.select-mail:checked').map(function () {
            return $(this).data('mail-id');
        }).get();
        if (ids.length > 0) {
            $.ajax({
                url: '@Url.Action("MailiOkunduYap", "Mail")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(ids),
                success: function (data) {
                    if (data.success) {
                        // Güncellenen maillerin stilini değiştirme
                        ids.forEach(function (id) {
                            $('tr[data-mail-id="' + id + '"]').removeClass('font-weight-bold');
                        });
                        toggleActionButtons();
                    } else {
                        alert(data.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error marking mails as read: ', textStatus, errorThrown);
                }
            });
        }
    });

    // Sayfa yüklendiğinde butonların durumunu kontrol edelim
    toggleActionButtons();
});

</script>