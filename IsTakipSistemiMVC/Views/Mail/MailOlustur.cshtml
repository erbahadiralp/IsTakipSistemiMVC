@{
    ViewBag.Title = "Mail Oluştur";
    Layout = ViewBag.Layout;
}

@model IsTakipSistemiMVC.Models.Mailler

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">

<head>
    <script src="https://cdn.tiny.cloud/1/qt74eu7gjpitzswq844riknyzdmepeq00rbgodnmj4moc86f/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
</head>

<div class="sidebar">
    <a href="@Url.Action("MailOlustur", "Mail")" class="btn btn-primary custom-button">Oluştur</a>
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Index", "Mail")">
                <i class="bi bi-inbox"></i> Gelen Kutusu
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GidenMailler", "Mail")">
                <i class="bi bi-send"></i> Gönderilmiş Postalar
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("ArsivGoster", "Mail")">
                <i class="bi bi-archive"></i> Arşivlenmiş Postalar
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("SilinmisMailler", "Mail")">
                <i class="bi bi-trash"></i> Silinmiş Postalar
            </a>
        </li>
    </ul>
</div>

<div class="container bootdey mt-5" style="margin-right:165px">
    <div class="email-app">
        <main>
            <p class="text-center">New Message</p>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-row mb-3">
                    <label for="mailAlici" class="col-2 col-sm-1 col-form-label">Kime:</label>
                    <div class="col-10 col-sm-11 d-flex align-items-center">
                        <input type="text" class="form-control" id="mailAlici" readonly placeholder="Kişi seçin" style="flex-grow: 1;" />
                        <div class="dropdown" style="margin-left: 10px">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                Seçiniz
                            </button>
                            <ul class="dropdown-menu p-3" aria-labelledby="dropdownMenuButton">
                                <input type="text" id="recipientSearch" class="form-control mb-2" placeholder="Kişi ara..." />
                                <div id="recipientList" class="form-check-group">
                                    @foreach (var item in ViewBag.Recipients as SelectList)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="@item.Value" id="recipient-@item.Value" />
                                            <label class="form-check-label" for="recipient-@item.Value" style="color: #495057;">
                                                @item.Text
                                            </label>
                                        </div>
                                    }
                                </div>
                                <div class="dropdown-divider"></div>
                                <button class="btn btn-primary" type="button" id="saveRecipientButton">Seçimi Kaydet</button>
                            </ul>
                        </div>
                    </div>
                    <input type="hidden" id="mailAliciId" name="mailAliciId" />
                    @Html.ValidationMessageFor(model => model.mailAliciId, "", new { @class = "text-danger" })
                </div>

                <div class="form-row mb-3">
                    <label for="cc" class="col-2 col-sm-1 col-form-label">Konu:</label>
                    <div class="col-10 col-sm-11">
                        @Html.EditorFor(model => model.mailKonu, new { htmlAttributes = new { @class = "form-control", placeholder = "Konu girin" } })
                        @Html.ValidationMessageFor(model => model.mailKonu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-4">
                    @Html.TextAreaFor(model => model.mailIcerik, new { @class = "form-control", rows = "12", placeholder = "Mail içeriğini girin" })
                    @Html.ValidationMessageFor(model => model.mailIcerik, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-success">Gönder</button>
                </div>
            }
        </main>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var saveRecipientButton = document.getElementById('saveRecipientButton');
        var dropdownMenuButton = document.getElementById('dropdownMenuButton');
        var selectedRecipients = document.getElementById('mailAlici');
        var recipientSearch = document.getElementById('recipientSearch');
        var recipientList = document.getElementById('recipientList');
        var mailAliciId = document.getElementById('mailAliciId');

        // Save selected recipients
        saveRecipientButton.addEventListener('click', function () {
            var selectedOptions = Array.from(recipientList.querySelectorAll('.form-check-input:checked'));
            var selectedValues = selectedOptions.map(option => option.nextElementSibling.textContent.trim());
            var selectedIds = selectedOptions.map(option => option.value);

            // Update the input field with selected values
            selectedRecipients.value = selectedValues.join(', ');
            mailAliciId.value = selectedIds.join(',');

            // Close dropdown menu
            var dropdown = new bootstrap.Dropdown(dropdownMenuButton);
            dropdown.hide();
        });

        // Filter recipients based on search input
        recipientSearch.addEventListener('input', function () {
            var filter = recipientSearch.value.toLowerCase();
            Array.from(recipientList.querySelectorAll('.form-check')).forEach(option => {
                var text = option.querySelector('label').textContent.toLowerCase();
                option.style.display = text.includes(filter) ? '' : 'none';
            });
        });
    });

    tinymce.init({
        selector: 'textarea',
        plugins: 'advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount',
        toolbar: 'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
        menubar: false,
        height: 300
    });
</script>

<style>
    .email-app {
        display: flex;
        flex-direction: row;
        background: #fff;
        border: 1px solid #e1e6ef;
    }

        .email-app main {
            min-width: 0;
            flex: 1;
            padding: 1rem;
        }

        .email-app .toolbar {
            padding-bottom: 1rem;
            border-bottom: 1px solid #e1e6ef;
        }

        .email-app .btn-group .btn-light {
            margin-right: 5px;
        }

    .form-label {
        color: #343a40;
        font-weight: bold;
    }

    .form-control {
        border-radius: 5px;
        transition: box-shadow 0.3s ease;
    }

        .form-control:focus {
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .sidebar {
        width: 250px;
        background-color: #f5f5f5;
        padding: 20px;
        position: fixed;
        height: 100%;
        overflow-y: auto;
        border-right: 1px solid #ddd;
        text-align: center;
        top: 71px;
    }

    .custom-button {
        width: 100%;
        background-color: #1a73e8;
        color: white;
        border-radius: 25px;
        text-align: center;
        padding-left: 15px;
        font-size: 16px;
        margin-bottom: 15px;
        transition: background-color 0.3s ease;
    }

        .custom-button i {
            margin-right: 10px;
        }

        .custom-button:hover {
            background-color: #135ab2;
            color: white;
        }

    .nav-link {
        color: #202124;
        font-weight: 500;
        padding: 10px;
        border-radius: 25px;
        margin-bottom: 5px;
        transition: background-color 0.3s ease;
    }

        .nav-link i {
            margin-right: 10px;
        }

        .nav-link:hover {
            background-color: #1a73e8;
            color: white;
        }

    .dropdown-menu .form-check-label {
        color: #495057;
    }

    .dropdown-menu .form-check-input:checked ~ .form-check-label {
        color: #0d6efd;
        font-weight: bold;
    }

    .dropdown-menu .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .dropdown-menu .form-check-input:focus {
        box-shadow: none;
    }
</style>
